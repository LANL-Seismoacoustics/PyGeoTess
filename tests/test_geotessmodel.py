"""
Test GeoTessModel methods.

"""
from pathlib import Path

import pytest

import geotess
import geotess.lib as lib

datadir = Path(geotess.__file__).parents[0] / 'data'
inputfile = str(datadir / 'crust20.geotess')
grid_id = '808785948EB2350DD44E6C29BDEA6CAE'

@pytest.fixture(scope="module")
def model_object():
    model = lib.GeoTessModel()
    model.loadModel(inputfile)
    return model


def test_init():
    model = lib.GeoTessModel()
    del model

def test_getNAttributes(model_object):
    # model = model_object
    # expected = 3
    # nattributes = model.getNAttributes()
    # assert nattributes == expected
    assert model_object.getNAttributes() == 3

# def test_getGrid():
#     grid = model.getGrid()
#     # expected = 'GeoTessGrid\ngridID = 808785948EB2350DD44E6C29BDEA6CAE\nmemory : 34.0625 MB\ninput Grid File : GeoTessModels/geotess_grid_01000.geotess\ngenerated by software version : GeoModel 7.0.1  Wed April 18 15:21:51 2012\n\nnTessellations = 1\nnLevels = 7\nnVertices = 40962\nnTriangles = 109220\n\n    Tess    Level  LevelID     NTri    First   Last+1\n      0        0        0       20        0       20\n      0        1        1       80       20      100\n      0        2        2      320      100      420\n      0        3        3     1280      420     1700\n      0        4        4     5120     1700     6820\n      0        5        5    20480     6820    27300\n      0        6        6    81920    27300   109220\n\n'
#     # assert grid.toString() == expected
#     assert grid.getGridID() == grid_id

def test_getPointWeights(model_object):
    # randomly chose a lat/lon/depth.
    lat, lon, depth = 30.5, 110.5, 1.0
    expected = {
        142055: 0.25024172435496234, 
        142062: 0.32783477321661203, 
        142069: 0.42192350242842563
        }
    weights = model_object.getPointWeights(lat, lon, depth)
    assert weights == pytest.approx(expected)
